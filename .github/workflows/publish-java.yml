name: publish-java

on: workflow_dispatch

permissions:
  contents: read

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            extension: so
            build_cmd: zigbuild
            glibc: "2.17"
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            extension: so
            build_cmd: zigbuild
            glibc: "2.17"
          - target: x86_64-apple-darwin
            os: macos-latest
            extension: dylib
          - target: aarch64-apple-darwin
            os: macos-latest
            extension: dylib
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            extension: dll
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          java-version: 8
          distribution: "corretto"
      - uses: ./.github/actions/toolchains/rust
        with:
          targets: ${{ matrix.target }}
      - if: ${{ matrix.build_cmd == 'zigbuild' }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.11"
      - if: ${{ matrix.build_cmd == 'zigbuild' }}
        run: pip install cargo-zigbuild
      - run: cargo fetch
      - run: cargo ${{ matrix.build_cmd || 'build' }} --release --frozen --target ${{ matrix.target }}${{ matrix.glibc && format('.{0}', matrix.glibc) || '' }} --manifest-path ./bindings/java/Cargo.toml
      - run: mkdir -p native/${{ matrix.target }}
      - run: mv target/${{ matrix.target }}/release/*.${{ matrix.extension }} ./native/${{ matrix.target }}/
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: native-libraries-${{ matrix.target }}
          path: native/

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          java-version: 8
          distribution: "corretto"
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          pattern: native-libraries-*
          merge-multiple: true
          path: ./bindings/java/native/
      - run: mvn package
        working-directory: ./bindings/java
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: built-jars
          path: ./bindings/java/target/regorus-java-*.jar
      - run: mvn deploy
        working-directory: ./bindings/java
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
